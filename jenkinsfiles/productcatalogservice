pipeline {
    agent any 

    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'master', url: 'https://github.com/VinayPoral/Deployment_of_MS_END_END.git'
            }
        }
        stage("Docker Image Build") {
            steps {
                script {
                    dir('src/productcatalogservice') {
                        sh 'docker system prune -f'
                        sh 'docker container prune -f'
                        sh 'docker build -t productcatalogservice .'
                    }
                }
            }
        }
        stage("ECR Image Pushing") {
            steps {
                script {
                    sh '''
                    #Retrieve an authentication token and authenticate your Docker client to your registry. Use the AWS CLI:
                    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 050752631174.dkr.ecr.us-east-1.amazonaws.com

                    #After the build completes, tag your image so you can push the image to this repository:
                    docker tag productcatalogservice:latest 050752631174.dkr.ecr.us-east-1.amazonaws.com/productcatalogservice:${BUILD_NUMBER}

                    #Run the following command to push this image to your newly created AWS repository:
                    docker push 050752631174.dkr.ecr.us-east-1.amazonaws.com/productcatalogservice:${BUILD_NUMBER}
                    '''
                }
            }
        }
        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "Deployment_of_MS_END_END"
                GIT_EMAIL = "poralvinay1997@gmail.com"
                GIT_USER_NAME = "VinayPoral"
                IMAGE_NAME = "productcatalogservice"
                REPO_URL = "050752631174.dkr.ecr.us-east-1.amazonaws.com/productcatalogservice"
                YAML_FILE = "productcatalogservice.yaml"
            }
            steps {
                dir('kubernetes-files') {
                    withCredentials([string(credentialsId: 'my-git-pattoken', variable: 'git_token')]) {
                        sh '''
                            git config user.email "${GIT_EMAIL}"
                            git config user.name "${GIT_USER_NAME}"
                            BUILD_NUMBER=${BUILD_NUMBER}
                            echo $BUILD_NUMBER

                            # push this image to your git hub
                            sed -i "s#image:.*#image: ${REPO_URL}:$BUILD_NUMBER#g" ${YAML_FILE}
                            git add .
                            git commit -m "Update ${IMAGE_NAME} Image to version \${BUILD_NUMBER}"
                            git push https://${git_token}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
        
                        '''
                    }
                }
            }
        }
    }
}
